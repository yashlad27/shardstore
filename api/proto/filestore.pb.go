// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.3
// source: api/proto/filestore.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Chunk         []byte                 `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
	TotalSize     int64                  `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	ContentType   string                 `protobuf:"bytes,4,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadRequest) Reset() {
	*x = UploadRequest{}
	mi := &file_api_proto_filestore_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRequest) ProtoMessage() {}

func (x *UploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_filestore_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRequest.ProtoReflect.Descriptor instead.
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_filestore_proto_rawDescGZIP(), []int{0}
}

func (x *UploadRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UploadRequest) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *UploadRequest) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *UploadRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

type UploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	VersionId     string                 `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	NodeLocations []string               `protobuf:"bytes,4,rep,name=node_locations,json=nodeLocations,proto3" json:"node_locations,omitempty"`
	Success       bool                   `protobuf:"varint,5,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadResponse) Reset() {
	*x = UploadResponse{}
	mi := &file_api_proto_filestore_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResponse) ProtoMessage() {}

func (x *UploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_filestore_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResponse.ProtoReflect.Descriptor instead.
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_filestore_proto_rawDescGZIP(), []int{1}
}

func (x *UploadResponse) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *UploadResponse) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *UploadResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UploadResponse) GetNodeLocations() []string {
	if x != nil {
		return x.NodeLocations
	}
	return nil
}

func (x *UploadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UploadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DownloadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	VersionId     string                 `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"` // optional, downloads latest if empty
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadRequest) Reset() {
	*x = DownloadRequest{}
	mi := &file_api_proto_filestore_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadRequest) ProtoMessage() {}

func (x *DownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_filestore_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadRequest.ProtoReflect.Descriptor instead.
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_filestore_proto_rawDescGZIP(), []int{2}
}

func (x *DownloadRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *DownloadRequest) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

type DownloadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chunk         []byte                 `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	TotalSize     int64                  `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	ContentType   string                 `protobuf:"bytes,3,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadResponse) Reset() {
	*x = DownloadResponse{}
	mi := &file_api_proto_filestore_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadResponse) ProtoMessage() {}

func (x *DownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_filestore_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadResponse.ProtoReflect.Descriptor instead.
func (*DownloadResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_filestore_proto_rawDescGZIP(), []int{3}
}

func (x *DownloadResponse) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *DownloadResponse) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *DownloadResponse) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

type DeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_api_proto_filestore_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_filestore_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_filestore_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_api_proto_filestore_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_filestore_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_filestore_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type FileInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileInfoRequest) Reset() {
	*x = FileInfoRequest{}
	mi := &file_api_proto_filestore_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfoRequest) ProtoMessage() {}

func (x *FileInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_filestore_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfoRequest.ProtoReflect.Descriptor instead.
func (*FileInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_filestore_proto_rawDescGZIP(), []int{6}
}

func (x *FileInfoRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type FileInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	ContentType   string                 `protobuf:"bytes,4,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Versions      []string               `protobuf:"bytes,7,rep,name=versions,proto3" json:"versions,omitempty"`
	Replicas      []string               `protobuf:"bytes,8,rep,name=replicas,proto3" json:"replicas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileInfoResponse) Reset() {
	*x = FileInfoResponse{}
	mi := &file_api_proto_filestore_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfoResponse) ProtoMessage() {}

func (x *FileInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_filestore_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfoResponse.ProtoReflect.Descriptor instead.
func (*FileInfoResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_filestore_proto_rawDescGZIP(), []int{7}
}

func (x *FileInfoResponse) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *FileInfoResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileInfoResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileInfoResponse) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *FileInfoResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *FileInfoResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *FileInfoResponse) GetVersions() []string {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *FileInfoResponse) GetReplicas() []string {
	if x != nil {
		return x.Replicas
	}
	return nil
}

type ListFilesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFilesRequest) Reset() {
	*x = ListFilesRequest{}
	mi := &file_api_proto_filestore_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesRequest) ProtoMessage() {}

func (x *ListFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_filestore_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesRequest.ProtoReflect.Descriptor instead.
func (*ListFilesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_filestore_proto_rawDescGZIP(), []int{8}
}

func (x *ListFilesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListFilesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListFilesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []*FileInfoResponse    `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFilesResponse) Reset() {
	*x = ListFilesResponse{}
	mi := &file_api_proto_filestore_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesResponse) ProtoMessage() {}

func (x *ListFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_filestore_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesResponse.ProtoReflect.Descriptor instead.
func (*ListFilesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_filestore_proto_rawDescGZIP(), []int{9}
}

func (x *ListFilesResponse) GetFiles() []*FileInfoResponse {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *ListFilesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type VersionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	VersionId     string                 `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionRequest) Reset() {
	*x = VersionRequest{}
	mi := &file_api_proto_filestore_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionRequest) ProtoMessage() {}

func (x *VersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_filestore_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionRequest.ProtoReflect.Descriptor instead.
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_filestore_proto_rawDescGZIP(), []int{10}
}

func (x *VersionRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *VersionRequest) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

var File_api_proto_filestore_proto protoreflect.FileDescriptor

const file_api_proto_filestore_proto_rawDesc = "" +
	"\n" +
	"\x19api/proto/filestore.proto\x12\tfilestore\"\x83\x01\n" +
	"\rUploadRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x14\n" +
	"\x05chunk\x18\x02 \x01(\fR\x05chunk\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x03R\ttotalSize\x12!\n" +
	"\fcontent_type\x18\x04 \x01(\tR\vcontentType\"\xb7\x01\n" +
	"\x0eUploadResponse\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12\x1d\n" +
	"\n" +
	"version_id\x18\x02 \x01(\tR\tversionId\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12%\n" +
	"\x0enode_locations\x18\x04 \x03(\tR\rnodeLocations\x12\x18\n" +
	"\asuccess\x18\x05 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x06 \x01(\tR\amessage\"I\n" +
	"\x0fDownloadRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12\x1d\n" +
	"\n" +
	"version_id\x18\x02 \x01(\tR\tversionId\"j\n" +
	"\x10DownloadResponse\x12\x14\n" +
	"\x05chunk\x18\x01 \x01(\fR\x05chunk\x12\x1d\n" +
	"\n" +
	"total_size\x18\x02 \x01(\x03R\ttotalSize\x12!\n" +
	"\fcontent_type\x18\x03 \x01(\tR\vcontentType\"(\n" +
	"\rDeleteRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\"D\n" +
	"\x0eDeleteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"*\n" +
	"\x0fFileInfoRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\"\xf4\x01\n" +
	"\x10FileInfoResponse\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12!\n" +
	"\fcontent_type\x18\x04 \x01(\tR\vcontentType\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\tR\tupdatedAt\x12\x1a\n" +
	"\bversions\x18\a \x03(\tR\bversions\x12\x1a\n" +
	"\breplicas\x18\b \x03(\tR\breplicas\"C\n" +
	"\x10ListFilesRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\"g\n" +
	"\x11ListFilesResponse\x121\n" +
	"\x05files\x18\x01 \x03(\v2\x1b.filestore.FileInfoResponseR\x05files\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"H\n" +
	"\x0eVersionRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12\x1d\n" +
	"\n" +
	"version_id\x18\x02 \x01(\tR\tversionId2\xaa\x03\n" +
	"\tFileStore\x12?\n" +
	"\x06Upload\x12\x18.filestore.UploadRequest\x1a\x19.filestore.UploadResponse(\x01\x12E\n" +
	"\bDownload\x12\x1a.filestore.DownloadRequest\x1a\x1b.filestore.DownloadResponse0\x01\x12=\n" +
	"\x06Delete\x12\x18.filestore.DeleteRequest\x1a\x19.filestore.DeleteResponse\x12F\n" +
	"\vGetFileInfo\x12\x1a.filestore.FileInfoRequest\x1a\x1b.filestore.FileInfoResponse\x12F\n" +
	"\tListFiles\x12\x1b.filestore.ListFilesRequest\x1a\x1c.filestore.ListFilesResponse\x12F\n" +
	"\n" +
	"GetVersion\x12\x19.filestore.VersionRequest\x1a\x1b.filestore.DownloadResponse0\x01B5Z3github.com/yashlad/distributed-file-store/api/protob\x06proto3"

var (
	file_api_proto_filestore_proto_rawDescOnce sync.Once
	file_api_proto_filestore_proto_rawDescData []byte
)

func file_api_proto_filestore_proto_rawDescGZIP() []byte {
	file_api_proto_filestore_proto_rawDescOnce.Do(func() {
		file_api_proto_filestore_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_filestore_proto_rawDesc), len(file_api_proto_filestore_proto_rawDesc)))
	})
	return file_api_proto_filestore_proto_rawDescData
}

var file_api_proto_filestore_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_proto_filestore_proto_goTypes = []any{
	(*UploadRequest)(nil),     // 0: filestore.UploadRequest
	(*UploadResponse)(nil),    // 1: filestore.UploadResponse
	(*DownloadRequest)(nil),   // 2: filestore.DownloadRequest
	(*DownloadResponse)(nil),  // 3: filestore.DownloadResponse
	(*DeleteRequest)(nil),     // 4: filestore.DeleteRequest
	(*DeleteResponse)(nil),    // 5: filestore.DeleteResponse
	(*FileInfoRequest)(nil),   // 6: filestore.FileInfoRequest
	(*FileInfoResponse)(nil),  // 7: filestore.FileInfoResponse
	(*ListFilesRequest)(nil),  // 8: filestore.ListFilesRequest
	(*ListFilesResponse)(nil), // 9: filestore.ListFilesResponse
	(*VersionRequest)(nil),    // 10: filestore.VersionRequest
}
var file_api_proto_filestore_proto_depIdxs = []int32{
	7,  // 0: filestore.ListFilesResponse.files:type_name -> filestore.FileInfoResponse
	0,  // 1: filestore.FileStore.Upload:input_type -> filestore.UploadRequest
	2,  // 2: filestore.FileStore.Download:input_type -> filestore.DownloadRequest
	4,  // 3: filestore.FileStore.Delete:input_type -> filestore.DeleteRequest
	6,  // 4: filestore.FileStore.GetFileInfo:input_type -> filestore.FileInfoRequest
	8,  // 5: filestore.FileStore.ListFiles:input_type -> filestore.ListFilesRequest
	10, // 6: filestore.FileStore.GetVersion:input_type -> filestore.VersionRequest
	1,  // 7: filestore.FileStore.Upload:output_type -> filestore.UploadResponse
	3,  // 8: filestore.FileStore.Download:output_type -> filestore.DownloadResponse
	5,  // 9: filestore.FileStore.Delete:output_type -> filestore.DeleteResponse
	7,  // 10: filestore.FileStore.GetFileInfo:output_type -> filestore.FileInfoResponse
	9,  // 11: filestore.FileStore.ListFiles:output_type -> filestore.ListFilesResponse
	3,  // 12: filestore.FileStore.GetVersion:output_type -> filestore.DownloadResponse
	7,  // [7:13] is the sub-list for method output_type
	1,  // [1:7] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_api_proto_filestore_proto_init() }
func file_api_proto_filestore_proto_init() {
	if File_api_proto_filestore_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_filestore_proto_rawDesc), len(file_api_proto_filestore_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_filestore_proto_goTypes,
		DependencyIndexes: file_api_proto_filestore_proto_depIdxs,
		MessageInfos:      file_api_proto_filestore_proto_msgTypes,
	}.Build()
	File_api_proto_filestore_proto = out.File
	file_api_proto_filestore_proto_goTypes = nil
	file_api_proto_filestore_proto_depIdxs = nil
}
